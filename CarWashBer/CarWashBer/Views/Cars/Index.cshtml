@model IEnumerable<CarWashBer.Models.Car>

@{
    ViewData["Title"] = "Index";
}

<h1>Your cars</h1>

<p></p>
<input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search..">
<p></p>
<p>Click on the table headers to sort asc/desc</p>

<table class="table" id="myTable">
    <thead>
        <tr>
            <th onclick="sortTable(0)">
                @Html.DisplayNameFor(model => model.CarModel.CarBrand.BrandName)
            </th>
            <th onclick="sortTable(1)">
                @Html.DisplayNameFor(model => model.CarModel.ModelName)
            </th>
            <th onclick="sortTable(2)">
                @Html.DisplayNameFor(model => model.LicensePlate)
            </th>
            <th>
                <a asp-action="Create">Add New</a>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CarModel.CarBrand.BrandName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CarModel.ModelName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LicensePlate)
                </td>
                <td>
                    <a asp-action="Delete" asp-route-id="@item.CarId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>



@section Scripts
{
<script>
    function myFunction() {
        var input, filter, table, tr, td, i, txtValue0, txtValue1, txtValue2;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");

        for (i = 0; i < tr.length; i++) {
            td0 = tr[i].getElementsByTagName("td")[0];
            td1 = tr[i].getElementsByTagName("td")[1];
            td2 = tr[i].getElementsByTagName("td")[2];
            if (td0 || td1 || td2) {
                txtValue0 = td0.textContent || td0.innerText;
                txtValue1 = td1.textContent || td1.innerText;
                txtValue2 = td2.textContent || td2.innerText;
                if (txtValue0.toUpperCase().indexOf(filter) > -1 || txtValue1.toUpperCase().indexOf(filter) > -1 || txtValue2.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>

<script>
    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("myTable");
        switching = true;
        dir = "asc";
        while (switching) {
            switching = false;
            rows = table.rows;
            for (i = 1; i < (rows.length - 1); i++) {
                shouldSwitch = false;
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                switchcount++;
            } else {
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }
</script>
}